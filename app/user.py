import logging
from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery, FSInputFile, ContentType
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext

from app.states import DesignRequestStates
from app.utils.validators import is_valid_email
import app.user_keyboards as kb
import app.admin_keyboards as akb
from app.database.requests import set_user

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)
user = Router()

# –°–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–∏–ø–∞ –¥–∏–∑–∞–π–Ω–∞
design_types = {
    "logotype": "–õ–æ–≥–æ—Ç–∏–ø",
    "identy": "–ê–π–¥–µ–Ω—Ç–∏–∫–∞",
    "web_design": "–í–µ–±-–¥–∏–∑–∞–π–Ω",
    "design_motion": "–ú–æ—É—à–Ω-–¥–∏–∑–∞–π–Ω",
    "design_other": "–î—Ä—É–≥–æ–µ"
}

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
async def send_photo_with_keyboard(message: Message, photo_path: str, caption: str, keyboard):
    try:
        photo = FSInputFile(photo_path)
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=photo,
            caption=caption,
            parse_mode="MarkdownV2",
            reply_markup=keyboard
        )
    except FileNotFoundError:
        logger.error("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: %s", photo_path)
        await message.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", reply_markup=keyboard)


# –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç–∞
@user.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    await set_user(message.from_user.id)
    photo_path = 'resource/Images/hello-image.png'
    caption = (
        "*artmor design* ‚Äî –º–µ—Å—Ç–æ, –≥–¥–µ —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏ –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ –ø—Ä–æ—Å—Ç—ã–µ —Ä–µ—à–µ–Ω–∏—è, "
        "–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–¥–µ–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é\\.\n\n"
        "–ú—ã –ø–æ–º–æ–≥–∞–µ–º –±—Ä–µ–Ω–¥–∞–º –≤—ã–¥–µ–ª—è—Ç—å—Å—è, —Å–æ–∑–¥–∞–≤–∞—è —Å–∏–ª—å–Ω—ã–µ –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–µ—Å—è –ø—Ä–æ–µ–∫—Ç—ã\\. "
        "–ù–∞—à –ø–æ–¥—Ö–æ–¥ ‚Äî –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º, –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –∏ –≥–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞\\. "
        "–ú—ã —Å–æ–∑–¥–∞—ë–º –¥–∏–∑–∞–π–Ω, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –≤–Ω–∏–º–∞–Ω–∏–µ, –Ω–æ –∏ –¥–µ–ª–∞–µ—Ç –≤–∞—à –±—Ä–µ–Ω–¥ —É–≤–µ—Ä–µ–Ω–Ω—ã–º –∏ —É–∑–Ω–∞–≤–∞–µ–º—ã–º\\.\n\n"
        ">–î–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–º —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é ‚Äî –º—ã —Ä–∞—Å—Å–∫–∞–∂–µ–º –µ—ë —Ç–∞–∫, –∫–∞–∫ –Ω–∏–∫—Ç–æ –¥—Ä—É–≥–æ–π\\."
    )
    
    await send_photo_with_keyboard(message, photo_path, caption, kb.get_main_keyboard())


# –ù–∞—á–∞–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –¥–∏–∑–∞–π–Ω
@user.message(F.text == "–ó–∞–∫–∞–∑–∞—Ç—å –¥–∏–∑–∞–π–Ω")
async def start_design_request(message: Message, state: FSMContext):
    await message.answer(
        "üìù –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:", 
    )
    await state.set_state(DesignRequestStates.waiting_project_name)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
@user.message(DesignRequestStates.waiting_project_name)
async def process_project_name(message: Message, state: FSMContext):
    project_name = message.text.strip()
    if not project_name:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞.")
        return
    await state.update_data(project_name=project_name)
    await message.answer(
        "üì≤ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:", 
        reply_markup=kb.get_design_request_inline_keyboard()
    )
    await state.set_state(DesignRequestStates.waiting_what_to_design)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–∏–∑–∞–π–Ω–∞
@user.callback_query(F.data.in_([ 
    "logotype", "identy", "web_design", "design_motion", "design_other"
]))
async def process_design_type(callback_query: CallbackQuery, state: FSMContext):
    await state.update_data(what_to_design=callback_query.data)
    await callback_query.message.answer("‚úâÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à email.")
    await state.set_state(DesignRequestStates.waiting_email)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ email
@user.message(DesignRequestStates.waiting_email)
async def process_email(message: Message, state: FSMContext):
    if not is_valid_email(message.text):
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return
    await state.update_data(email=message.text)
    await message.answer("üìû –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏.", reply_markup=kb.get_phone())
    await state.set_state(DesignRequestStates.waiting_contact)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞
@user.message(DesignRequestStates.waiting_contact)
async def process_contact(message: Message, state: FSMContext):
    if not message.contact or not message.contact.phone_number:
        await message.answer("–û—à–∏–±–∫–∞: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")
        return
    await state.update_data(contact=message.contact.phone_number)
    await message.answer("‚úçÔ∏è –ù–µ—Å–∫–æ–ª—å–∫–æ —Å–ª–æ–≤ –æ –ø—Ä–æ–µ–∫—Ç–µ –∏ –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—ã–π –±—é–¥–∂–µ—Ç.")
    await state.set_state(DesignRequestStates.waiting_project_info)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ
@user.message(DesignRequestStates.waiting_project_info)
async def process_project_info(message: Message, state: FSMContext):
    await state.update_data(project_info=message.text)
    await message.answer("üìÉ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'", reply_markup=kb.get_skip_button())
    await state.set_state(DesignRequestStates.waiting_for_file)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞
@user.message(DesignRequestStates.waiting_for_file, F.content_type == ContentType.DOCUMENT)
async def handle_file(message: Message, state: FSMContext):
    file_id = message.document.file_id
    file_name = message.document.file_name
    await state.update_data(file=file_id, file_name=file_name)
    await finalize_request(message, state)


# –ü—Ä–æ–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
@user.message(DesignRequestStates.waiting_for_file, F.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
async def skip_file(message: Message, state: FSMContext):
    await finalize_request(message, state)


# –§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞
async def finalize_request(message: Message, state: FSMContext):
    data = await state.get_data()

    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –¥–∏–∑–∞–π–Ω–∞ —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
    what_to_design = design_types.get(data.get('what_to_design', ''), '–ù–µ —É–∫–∞–∑–∞–Ω–æ')

    confirmation_message = (
        f"*‚Äî –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:* {data.get('project_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n" 
        f"*‚Äî –¢–∏–ø –¥–∏–∑–∞–π–Ω–∞:* {what_to_design}\n"
        f"*‚Äî Email:* {data.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"*‚Äî –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* {data.get('contact', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"*‚Äî –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ:* {data.get('project_info', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
        f"*‚Äî –§–∞–π–ª:* {data.get('file_name', '–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω')}\n\n"
        f"‚ö†Ô∏è –ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π."
    )

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer(confirmation_message, parse_mode="Markdown", reply_markup=kb.get_main_keyboard())

    group_chat_id = -1002459041373
    user_id = message.from_user.id
    file_id = data.get('file')
    file_name = data.get('file_name')

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç
    if file_id:
        await message.bot.send_document(
            chat_id=group_chat_id,
            document=file_id,
            caption=( 
                f"*–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:* {data.get('project_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n\n"
                f"*–¢–∏–ø –¥–∏–∑–∞–π–Ω–∞:* {what_to_design}\n"
                f"*Email:* {data.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
                f"*–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* {data.get('contact', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
                f"*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ:* {data.get('project_info', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
            ),
            parse_mode="Markdown",
            reply_markup=akb.get_user_chat_keyboard(user_id=user_id)
        )
    else:
        await message.bot.send_message(
            chat_id=group_chat_id,
            text=( 
                f"*–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:* {data.get('project_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n\n"
                f"*–¢–∏–ø –¥–∏–∑–∞–π–Ω–∞:* {what_to_design}\n"
                f"*Email:* {data.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
                f"*–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* {data.get('contact', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
                f"*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ:* {data.get('project_info', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
            ),
            parse_mode="Markdown",
            reply_markup=akb.get_user_chat_keyboard(user_id=user_id)
        )

    # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.clear()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ "–û—Ç–∑—ã–≤—ã", "FAQ", "–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ"
@user.message(F.text == "–û—Ç–∑—ã–≤—ã")
async def message_review(message: Message, bot: Bot, state: FSMContext):
    await send_photo_with_keyboard(message, 'resource/Images/review.png', "", kb.review_keyboard())
    await state.clear()


@user.message(F.text == "FAQ")
async def faq(message: Message, bot: Bot, state: FSMContext):
    faq_text = (
        "*1\\. –ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å –¥–∏–∑–∞–π–Ω?*\n\n"
        ">–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å –¥–∏–∑–∞–π–Ω, –≤–∞–º –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—É—é —É—Å–ª—É–≥—É, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ –∏ —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è –∏ –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏\\.\n\n"
        "*2\\. –ö–∞–∫ –¥–æ–ª–≥–æ –±—É–¥–µ—Ç –¥–ª–∏—Ç—å—Å—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞?*\n\n"
        ">–°—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞\\. –û–±—ã—á–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –∑–∞–Ω–∏–º–∞–µ—Ç –æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –¥–Ω–µ–π –¥–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –Ω–µ–¥–µ–ª—å\\. –ú—ã —Å–æ–æ–±—â–∏–º —Ç–æ—á–Ω—ã–µ —Å—Ä–æ–∫–∏ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ—Ç –≤–∞—Å\\.\n\n"
        "*3\\. –ú–æ–∂–Ω–æ –ª–∏ –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –¥–∏–∑–∞–π–Ω –ø–æ—Å–ª–µ –µ–≥–æ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è?*\n\n"
        ">–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –¥–∏–∑–∞–π–Ω –≤ —Ä–∞–º–∫–∞—Ö –æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏\\. –û–¥–Ω–∞–∫–æ –∫—Ä—É–ø–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã—Ö–æ–¥—è—Ç –∑–∞ —Ä–∞–º–∫–∏ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è, –º–æ–≥—É—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –æ–ø–ª–∞—Ç—ã\\.\n\n"
        "*4\\. –ö–∞–∫–æ–π —Ç–∏–ø —Ñ–∞–π–ª–æ–≤ –≤—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é —Ä–∞–±–æ—Ç—ã?*\n\n"
        ">–ü–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≤—Å–µ –∏—Å—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ, —É–¥–æ–±–Ω–æ–º –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, –≤–∫–ª—é—á–∞—è –≤–µ–∫—Ç–æ—Ä–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è \\(–Ω–∞–ø—Ä–∏–º–µ—Ä, \\.ai, \\.eps\\), —Ä–∞—Å—Ç—Ä–æ–≤—ã–µ —Ñ–∞–π–ª—ã \\(\\.jpg, \\.png\\) –∏ –¥—Ä—É–≥–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É\\.\n\n"
        "*5\\. –ö–∞–∫–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏ —è –ø–æ–ª—É—á–∞—é, –∑–∞–∫–∞–∑–∞–≤ –¥–∏–∑–∞–π–Ω?*\n\n"
        ">–ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –¥–∏–∑–∞–π–Ω –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –≤–∞—à–∏–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –∑–∞–¥–∞–Ω–∏–µ–º –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏\\. –¢–∞–∫–∂–µ, –µ—Å–ª–∏ –ø–æ –∫–∞–∫–∏–º\\-—Ç–æ –ø—Ä–∏—á–∏–Ω–∞–º –≤–∞–º –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –º—ã —Å–¥–µ–ª–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∫–∏ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –≤—ã –Ω–µ –±—É–¥–µ—Ç–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω—ã –∫–æ–Ω–µ—á–Ω—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º\\.\n\n"
        "*6\\. –ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø–ª–∞—Ç–∞ –∑–∞ —É—Å–ª—É–≥–∏?*\n\n"
        ">–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –ø–æ —Å–∏—Å—Ç–µ–º–µ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã\\. –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—Å–µ—Ö –¥–µ—Ç–∞–ª–µ–π, –º—ã –≤—ã—Å—Ç–∞–≤–ª—è–µ–º —Å—á–µ—Ç –∏ –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É\\. –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —á–µ—Ä–µ–∑ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥\\.\n\n"
        "*7\\. –ï—Å—Ç—å –ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ –¥–∏–∑–∞–π–Ω—É?*\n\n"
        ">–î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –¥–∏–∑–∞–π–Ω–∞, –≤–∫–ª—é—á–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –≤–∞—à–µ–≥–æ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–≥–æ —Å—Ç–∏–ª—è, –≤–µ–±\\-–¥–∏–∑–∞–π–Ω–∞ –∏ –¥—Ä—É–≥–∏—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è\\. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏, –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –ø–æ –∫–Ω–æ–ø–∫–µ –≤ —Å–∞–º–æ–º –Ω–∏–∑—É —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è\\.\n\n"
        "*8\\. –ú–æ–∂–Ω–æ –ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å —Å—Ä–æ—á–Ω—ã–π –¥–∏–∑–∞–π–Ω?*\n\n"
        ">–î–∞, –º—ã –º–æ–∂–µ–º –≤–∑—è—Ç—å –∑–∞–∫–∞–∑ –≤ —Å—Ä–æ—á–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ\\. –û–¥–Ω–∞–∫–æ –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã\\.\n\n"
        "*9\\. –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ —è –ø–æ—Ç–µ—Ä—è–ª —Ñ–∞–π–ª –¥–∏–∑–∞–π–Ω–∞?*\n\n"
        ">–ï—Å–ª–∏ –≤—ã –ø–æ—Ç–µ—Ä—è–ª–∏ —Ñ–∞–π–ª, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –≤–∞—à–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –∫–æ–ø–∏—é\\. –û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –±—ã–ª –∑–∞–≤–µ—Ä—à–µ–Ω –¥–∞–≤–Ω–æ, –º—ã –Ω–µ –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤\\."
    )
    await message.answer(faq_text, parse_mode="MarkdownV2", reply_markup=kb.support())


@user.message(F.text == "–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ")
async def message_portfolio(message: Message, bot: Bot, state: FSMContext):
    await send_photo_with_keyboard(message, 'resource/Images/portfolio.png', "", kb.portfolio_keyboard())
    await state.clear()
